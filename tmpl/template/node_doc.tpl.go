//** This file was code generated by GoT. DO NOT EDIT. ***

package template

import (
	"io"
	"path/filepath"

	"github.com/goradd/orm/pkg/codegen"
	"github.com/goradd/orm/pkg/model"
)

func init() {
	codegen.RegisterTemplate(new(NodeDocTemplate))
}

// NodeDocTemplate generates the code for the node package documentation
type NodeDocTemplate struct{}

func (n NodeDocTemplate) FileName(dbKey string) string {
	return filepath.Join("orm", dbKey, "node", "doc.go")
}

func (n NodeDocTemplate) GenerateDatabase(database *model.Database, _w io.Writer) (err error) {

	//*** doc.tmpl

	if _, err = io.WriteString(_w, `// Code generated by goradd-orm. DO NOT EDIT.

// Package node contains the generated node objects that refer to tables, columns and aliases when doing a query.
//
// Nodes use a builder pattern to create a chain of relationships that end in a table or column. Start a node
// with the same table being queried, and then create a chain to the object being queried.
//
// For example, lets say a project table contains a foreign key to the id of a person table, and the foreign
// key is named "manager_id". You could get a list of all the projects managed by John with this query:
//
//   managers := model.QueryProjects(ctx).
//              Where(op.Equal(node.Project().Manager().Name(), "John")).
//              Load()
//
// See the goradd-orm documentation for more information.
package node
`); err != nil {
		return
	}

	return
}

func (n NodeDocTemplate) Overwrite() bool {
	return true
}
