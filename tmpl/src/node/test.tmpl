
{{g
//*** {{includeName}}
}}
{{
package node

import (
	"testing"
	"github.com/stretchr/testify/assert"
)

func TestSerialize{{= table.Identifier}}Table(t *testing.T) {
	var n query.NodeI = {{= table.Identifier }}()

    assert.Equal(t, "{{= table.QueryName }}", n.TableName_())
    assert.Equal(t, query.TableNodeType, n.NodeType_())
    assert.Equal(t, "{{= table.DbKey }}", n.DatabaseKey_())

	n2 := serNode(t, n)

    assert.Equal(t, "{{= table.QueryName }}", n2.TableName_())
    assert.Equal(t, query.TableNodeType, n2.NodeType_())
    assert.Equal(t, "{{= table.DbKey }}", n2.DatabaseKey_())

    nodes := {{= table.DecapIdentifier }}Table{}.ColumnNodes_()
    for _,cn := range nodes {
        cn2 := serNode(t, cn)
        assert.Equal(t, "{{= table.QueryName }}", cn2.TableName_())
        assert.Implements(t, (*query.NodeLinker)(nil), cn2)
        assert.Equal(t, query.TableNodeType, cn2.(query.NodeLinker).Parent().NodeType_())
    }
}

}}