{{g
//*** {{includeName}}
}}

{{

// {{= table.Identifier}}Node is the builder interface to the {{= table.Identifier}} nodes.
type {{= table.Identifier}}Node interface {
    query.TableNodeI
    PrimaryKey() *query.ColumnNode
{{for _,col := range table.Columns}}
    // {{= col.Identifier }} represents the {{= col.QueryName }} column in the database.
    {{= col.Identifier }}() *query.ColumnNode
{{if col.IsReference() }}
    // {{= col.ReferenceIdentifier() }} represents the {{= col.ReferenceIdentifier() }} reference to a {{= col.ReferenceType() }} object.
    {{= col.ReferenceIdentifier() }}() {{= col.ReferenceType() }}Node
{{if}}
{{for}}
{{for _,mm := range table.ManyManyReferences}}
     // {{= mm.IdentifierPlural }} represents the {{= mm.IdentifierPlural }} reference to {{= mm.ObjectType() }} objects.
   {{= mm.IdentifierPlural }}() {{= mm.ObjectType() }}Node
{{for}}
{{for _,rev := range table.ReverseReferences}}
    // {{= rev.ReverseIdentifier() }} represents the {{= rev.ReverseIdentifier() }} reference to {{if rev.IsUnique
}}a {{= rev.Table.Identifier }} object.{{else}}{{= rev.Table.Identifier }} objects.{{if}}
    {{= rev.ReverseIdentifier() }}() {{= rev.Table.Identifier }}Node
{{for}}
}

// {{= table.DecapIdentifier }}Table represents the {{= table.QueryName}} table in a query. It uses a builder pattern to chain
// together other tables and columns to form a node chain in a query.
//
// To use the {{= table.DecapIdentifier }}Table, call [{{= table.Identifier }}()] to start a reference chain when querying the {{= table.QueryName }} table.
type {{= table.DecapIdentifier}}Table struct {
}

{{if hasReverse}}
type {{= table.DecapIdentifier}}Reference struct {
    {{= table.DecapIdentifier}}Table
    query.ReferenceNode
}
{{if}}

{{if hasReference}}
type {{= table.DecapIdentifier}}Reverse struct {
    {{= table.DecapIdentifier}}Table
    query.ReverseNode
}
{{if}}

{{if hasAssociation}}
type {{= table.DecapIdentifier}}Association struct {
    {{= table.DecapIdentifier}}Table
    query.ManyManyNode
}
{{if}}
}}
