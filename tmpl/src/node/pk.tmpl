{{g
//*** {{includeName}}
}}

{{
// PrimaryKeys returns the primary key column nodes to satisfy the PrimaryKeyer interface.
func (n {{= table.DecapIdentifier }}Table) PrimaryKeys() []*query.ColumnNode {
    return []*query.ColumnNode {
{{for _, col := range table.PrimaryKeyColumns()}}
        n.{{col.Identifier}}(),
{{for}}
    }
}

{{if table.PrimaryKeyColumn() != nil }}
// PrimaryKey returns the primary key column node.
func (n {{= table.DecapIdentifier }}Table) PrimaryKey() *query.ColumnNode {
    return n.{{= table.PrimaryKeyColumn().Identifier }}()
}
{{if}}

{{if hasReverse}}
// PrimaryKeys returns the primary key column nodes.
func (n *{{= table.DecapIdentifier}}Reference) PrimaryKeys() []*query.ColumnNode {
    return []*query.ColumnNode {
{{for _, col := range table.PrimaryKeyColumns()}}
        n.{{col.Identifier}}(),
{{for}}
    }
}

{{if table.PrimaryKeyColumn() != nil }}
// PrimaryKey returns the primary key column nodes.
func (n {{= table.DecapIdentifier }}Reference) PrimaryKey() *query.ColumnNode {
    return n.{{= table.PrimaryKeyColumn().Identifier }}()
}
{{if}}
{{if}}

{{if hasReference}}
// PrimaryKeys returns the primary key column nodes.
func (n *{{= table.DecapIdentifier}}Reverse) PrimaryKeys() []*query.ColumnNode {
    return []*query.ColumnNode {
{{for _, col := range table.PrimaryKeyColumns()}}
        n.{{col.Identifier}}(),
{{for}}
    }
}

{{if table.PrimaryKeyColumn() != nil }}
// PrimaryKey returns the primary key column nodes.
func (n {{= table.DecapIdentifier }}Reverse) PrimaryKey() *query.ColumnNode {
    return n.{{= table.PrimaryKeyColumn().Identifier }}()
}
{{if}}
{{if}}

{{if hasAssociation}}
// PrimaryKeys returns the primary key column nodes.
func (n *{{= table.DecapIdentifier}}Association) PrimaryKeys() []*query.ColumnNode {
    return []*query.ColumnNode {
{{for _, col := range table.PrimaryKeyColumns()}}
        n.{{col.Identifier}}(),
{{for}}
    }
}

{{if}}
}}
