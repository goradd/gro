
{{g
//*** {{includeName}}
}}
{{

	if v, ok := m["{{= col.QueryName }}"]; ok {
		if v == nil {
			o.{{= col.VariableIdentifier() }} = {{= col.DefaultValueAsValue() }}
			o.{{= col.VariableIdentifier() }}IsNull = true
			o.{{= col.VariableIdentifier() }}IsValid = true
			o.{{= col.VariableIdentifier() }}IsDirty = false
{{if col.IsEnum() }}
{{if col.IsEnumArray() }}
 		} else if s, ok2 := v.(string); ok2 {
 		    var v {{= col.GoType() }}
 		    if s == "" {
 		        o.{{= col.VariableIdentifier() }} = nil
 		    } else if err := json.Unmarshal([]byte(s), &v); err != nil {
 		        panic("Value for {{= col.QueryName }} is not valid json")
 		    } else {
 		        o.{{= col.VariableIdentifier() }} = v
 		    }
{{else}}
		} else if i, ok2 := v.(int); ok2 {
		    o.{{= col.VariableIdentifier() }} = {{= col.GoType() }}(i)
{{if}}
{{else}}
		} else if o.{{= col.VariableIdentifier() }}, ok = v.({{= col.GoType() }}); ok {
{{if}}
			o.{{= col.VariableIdentifier() }}IsNull = false
			o.{{= col.VariableIdentifier() }}IsValid = true
			o.{{= col.VariableIdentifier() }}IsDirty = false
		} else {
			panic("Wrong type found for {{= col.QueryName }}.")
		}
	} else {
		o.{{= col.VariableIdentifier() }}IsValid = false
		o.{{= col.VariableIdentifier() }}IsNull = true
		o.{{= col.VariableIdentifier() }} = {{= col.DefaultValueAsValue() }}
	}

}}
