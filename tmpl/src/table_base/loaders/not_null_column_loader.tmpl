
{{g
//*** {{includeName}}
}}
{{

	if v, ok := m["{{= col.QueryName }}"]; ok && v != nil {
{{if col.IsEnum()}}
{{if col.IsEnumArray()}}
     	if s, ok2 := v.(string); ok2 {
 		    var v {{= col.GoType() }}
 		    if err := json.Unmarshal([]byte(s), &v); err != nil {
 		        panic("Value for {{= col.QueryName }} is not valid json")
 		    }
 		    o.{{= col.VariableIdentifier() }} = v
{{else}}
     	if i, ok2 := v.(int); ok2 {
           o.{{= col.VariableIdentifier() }} = {{= col.GoType() }}(i)
{{if}}
{{else}}
    	if o.{{= col.VariableIdentifier() }}, ok = v.({{= col.GoType() }}); ok {
{{if}}
			o.{{= col.VariableIdentifier() }}IsValid = true
			o.{{= col.VariableIdentifier() }}IsDirty = false
        {{if col.IsPrimaryKey}}
            o._originalPK = o.{{= col.VariableIdentifier() }}
        {{if}}
		} else {
			panic("Wrong type found for {{= col.QueryName }}.")
		}
	} else {
		o.{{= col.VariableIdentifier() }}IsValid = false
		o.{{= col.VariableIdentifier() }} = {{= col.DefaultValueAsValue() }}
	}

}}
