
{{g
//*** {{includeName}}
}}
{{
// Initialize or re-initialize a {{= table.Identifier }} database object to default values.
{{if table.HasAutoPK() }}
// The primary key will get a temporary unique value which will be replaced when the object is saved.
{{if}}
func (o *{{= table.DecapIdentifier}}Base) Initialize() {
{{for _,col := range table.AllColumns() }}
{{if col.IsAutoPK()}}
    o.{{= col.Field }} = db.TemporaryPrimaryKey()
{{else}}
	o.{{= col.Field }} = {{= col.DefaultValueAsValue() }}
{{if}}
{{if col.IsNullable }}
{{if col.HasDefaultValue() }}
	o.{{= col.Field }}IsNull = false
{{else}}
	o.{{= col.Field }}IsNull = true
{{if}}
{{if}}{{# IsNullable}}
	o.{{= col.Field }}IsLoaded = {{if col.HasDefaultValue()}}true{{else}}false{{if}}
{{if col.HasSetter() }}
	o.{{= col.Field }}IsDirty = false
{{if}}

{{for}}
{{if table.HasReverseReferences() }}

// Reverse reference objects.
{{for _,col := range table.ReverseReferences}}
    {{if col.IsUnique}}
        o.{{= col.ReverseField }} = nil
        o.{{= col.ReverseField }}IsDirty = false
    {{else}}
        o.{{= col.ReverseField }}.Clear()
        o.{{= col.ReverseField }}IsDirty = false
	{{if}}
{{for}}
{{if}}
{{if table.HasManyManyReferences() }}

// Many-Many reference objects.
{{for _,mm := range table.ManyManyReferences }}
    o.{{= mm.Field }}.Clear()
    o.{{= mm.PkField() }} = nil
    o.{{= mm.Field }}IsDirty = false
{{for}}
{{if}}

	o._aliases = nil
	o._restored = false
}

}}
