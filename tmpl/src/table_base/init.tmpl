
{{g
//*** {{includeName}}
}}
{{
// Initialize or re-initialize a {{= table.Identifier }} database object to default values.
{{if pk := table.PrimaryKeyColumn(); pk != nil && pk.IsAutoId }}
// The primary key will get a temporary negative number which will be replaced when the object is saved.
// Multiple calls to Initialize are not guaranteed to create sequential values for the primary key.
{{if}}
func (o *{{= table.DecapIdentifier}}Base) Initialize() {
{{for _,col := range table.Columns}}
{{if col.IsAutoId}}
    o.{{= col.VariableIdentifier() }} = db.TemporaryPrimaryKey()
{{else}}
	o.{{= col.VariableIdentifier() }} = {{= col.DefaultValueAsValue() }}
{{if}}
{{if col.IsNullable}}
{{if col.HasDefaultValue() }}
	o.{{= col.VariableIdentifier() }}IsNull = false
{{else}}
	o.{{= col.VariableIdentifier() }}IsNull = true
{{if}}
{{if}}{{# IsNullable}}
	o.{{= col.VariableIdentifier() }}IsLoaded = {{if col.HasDefaultValue() }}true{{else}}false{{if}}
{{if col.HasSetter() }}
	o.{{= col.VariableIdentifier() }}IsDirty = false
{{if}}

{{for}}
{{if len(table.ReverseReferences) > 0 }}

// Reverse reference objects.
{{for _,col := range table.ReverseReferences}}
    {{if col.IsUnique}}
        o.{{= col.ReverseVariableIdentifier() }} = nil
        o.{{= col.ReverseVariableIdentifier() }}IsDirty = false
    {{else}}
        o.{{= col.ReverseVariableIdentifier() }}.Clear()
        o.{{= col.ReverseVariableIdentifier() }}IsDirty = false
	{{if}}
{{for}}
{{if}}
{{if len(table.ManyManyReferences) > 0}}

// Many-Many reference objects.
{{for _,mm := range table.ManyManyReferences }}
    o.{{= mm.VariableIdentifier() }}.Clear()
    o.{{= mm.PkIdentifier() }} = nil
    o.{{= mm.VariableIdentifier() }}IsDirty = false
{{for}}
{{if}}

	o._aliases = nil
	o._restored = false
}

}}
