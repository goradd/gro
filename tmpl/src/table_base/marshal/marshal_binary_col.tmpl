
{{g
//*** {{includeName}}
}}
{{

    if err := enc.Encode(o.{{= col.Field }}); err != nil {
        return fmt.Errorf("error encoding {{= table.Identifier }}.{{= col.Field }}: %w", err)
    }
{{if col.IsNullable}}
    if err := enc.Encode(o.{{= col.Field }}IsNull); err != nil {
        return fmt.Errorf("error encoding {{= table.Identifier }}.{{= col.Field }}IsNull: %w", err)
    }
{{if}}
    if err := enc.Encode(o.{{= col.Field }}IsLoaded); err != nil {
        return fmt.Errorf("error encoding {{= table.Identifier }}.{{= col.Field }}IsLoaded: %w", err)
    }
{{if col.HasSetter() }}
    if err := enc.Encode(o.{{= col.Field }}IsDirty); err != nil {
        return fmt.Errorf("error encoding {{= table.Identifier }}.{{= col.Field }}IsDirty: %w", err)
    }
{{if}}

{{if col.IsReference() }}
    if o.{{= col.ReferenceVariableIdentifier() }} == nil {
        if err := enc.Encode(false); err != nil {
            return err
        }
    } else {
        if err := enc.Encode(true); err != nil {
            return err
        }
        if err := enc.Encode(o.{{= col.ReferenceVariableIdentifier() }}); err != nil {
            return fmt.Errorf("error encoding {{= table.Identifier }}.{{= col.ReferenceVariableIdentifier() }}: %w", err)
        }
    }
{{if}}

}}
