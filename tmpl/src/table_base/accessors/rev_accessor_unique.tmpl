{{g
//*** {{includeName}}
}}
{{

// {{= rev.ReverseIdentifier }} returns the connected {{= rev.Table.Identifier }} object, if one was loaded.
// Otherwise, it will return nil.
func (o *{{= table.DecapIdentifier}}Base) {{= rev.ReverseIdentifier }}() *{{= rev.Table.Identifier}} {
	if o.{{= rev.ReverseField }} == nil {
		return nil
	}
	return o.{{= rev.ReverseField }}
}

// Load{{= rev.ReverseIdentifier }} returns the connected {{= rev.Table.Identifier }} object, if one was loaded.
// Otherwise, it will load a new one and return it.
func (o *{{= table.DecapIdentifier}}Base) Load{{= rev.ReverseIdentifier }}(ctx context.Context) (*{{= rev.Table.Identifier }}, error) {
    if o.{{= rev.ReverseField }} != nil && o.{{= rev.ReverseField }}.IsDirty() {
        panic("The {{= rev.ReverseIdentifier }} has changed. You must save it first before changing to a different one.")
    }
    var err error
	if o.{{= rev.ReverseField }} == nil {
	    pk := o.{{= rev.Table.PrimaryKeyColumn().Identifier }}()
		o.{{= rev.ReverseField }}, err = Load{{= rev.Table.Identifier }}By{{= rev.ForeignKey.Identifier }}(ctx, pk)
	}
	return o.{{= rev.ReverseField }}, err
}

// Set{{= rev.ReverseIdentifier }} associates obj with this {{= table.Identifier }}
// through the reverse relationship in {{= rev.Table.Identifier }}.{{= rev.Identifier }}.
//
// The association is temporary until you call Save().
{{if rev.IsNullable }}
// Since this is a unique relationship, if a different {{= rev.Table.Identifier }} object is currently pointing to this {{= table.Identifier }},
// that {{= rev.Table.Identifier }}'s {{= rev.Identifier }} value will be set to null when Save is called.
// If you did not use a join to query the attached {{= rev.Table.Identifier }} in the first place, used a conditional join,
// or joined with an expansion, be particularly careful, since you may be inadvertently changing an item
// that is not currently attached to this {{table.Identifier}}.
{{else}}
// WARNING! Since this is a non-nullable unique relationship,
// if a different {{= rev.Table.Identifier }} object is currently pointing to this {{= table.Identifier }},
// it will be deleted. Pass nil to just delete the old object.
{{if}}
func (o *{{= table.DecapIdentifier}}Base) Set{{= rev.ReverseIdentifier }}(obj *{{= rev.Table.Identifier }}) {
    if o.{{= rev.ReverseField }} != nil && o.{{= rev.ReverseField }}.IsDirty() {
        panic("The {{= rev.ReverseIdentifier }} has changed. You must save it first before changing to a different one.")
    }
	o.{{= rev.ReverseField }} = obj
	o.{{= rev.ReverseField }}IsDirty = true
}

}}