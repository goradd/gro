
{{g
//*** {{includeName}}
}}

{{
// PrimaryKey returns the value of the primary key of the record.
func (o *{{= table.DecapIdentifier}}Base) PrimaryKey() {{= table.PrimaryKeyType() }} {
{{for _,col := range table.PrimaryKeyColumns() }}
	if o._restored && !o.{{= col.Field }}IsLoaded {
		panic ("{{= col.Identifier }} was not selected in the last query and has not been set, and so PrimaryKey is not valid")
	}
{{for}}
{{if len(table.PrimaryKeyColumns() ) == 1}}
	return o.{{= table.PrimaryKeyColumn().Field }}
{{else}}
    return {{= table.PrimaryKeyType() }} {
{{for _,col := range table.PrimaryKeyColumns() }}
        {{= col.Identifier }}: o.{{= col.Field }},
{{for}}
    }
{{if}}
}

// SetPrimaryKey sets the value of the primary key in the object, to be saved later in the database using the Save() function.
{{if table.HasAutoPK()}}
// Normally you will not need to call this function, since the primary key value is automatically generated by the
// database driver. Exceptions might include importing data to a new database, or correcting primary key conflicts when
// merging data.
{{if}}
// You cannot change a primary key for a record that has been written to the database. While SQL databases will
// allow it, NoSql databases will not. Save a copy and delete this one instead.
func (o *{{= table.DecapIdentifier}}Base) SetPrimaryKey(v {{= table.PrimaryKeyType() }}) {
    if o._restored {
        panic ("error: Do not change a primary key for a record that has been saved. Instead, save a copy and delete the original.")
    }
{{for _,col := range table.PrimaryKeyColumns() }}
{{if col.Size > 0 && col.ReceiverType == query.ColTypeString }}
    if utf8.RuneCountInString(v) > {{= table.Identifier}}{{= col.Identifier}}MaxLength {
        panic("attempted to set {{= table.Identifier}}.{{= col.Identifier }} to a value larger than its maximum length in runes")
    }
{{if}}
	o.{{= col.Field }}IsLoaded = true
	o.{{= col.Field }}IsDirty = true
{{if len(table.PrimaryKeyColumns()) == 1 }}
	o.{{= col.Field }} = v
{{else}}
    o.{{= col.Field }} = v.{{= col.Identifier }}
{{if}}
{{for}}
}

{{if len(table.PrimaryKeyColumns()) == 1 }}
{{g
    col := table.PrimaryKeyColumns()[0]
}}
// {{= col.Identifier }} returns the value of {{= col.Identifier }}.
func (o *{{= table.DecapIdentifier}}Base) {{= col.Identifier }}() {{= col.Type }} {
	return o.PrimaryKey()
}

// Set{{= col.Identifier }} sets the value of {{= col.Identifier }} in the object, to be saved later in the database using the Save() function.
{{if col.IsAutoPK() }}
// Normally you will not need to call this function, since the {{= col.Identifier }} value is automatically generated by the
// database driver. Exceptions might include importing data to a new database, or correcting primary key conflicts when
// merging data.
{{if}}
// You cannot change a primary key for a record that has been written to the database. While SQL databases will
// allow it, NoSql databases will not. Save a copy and delete this one instead.
func (o *{{= table.DecapIdentifier }}Base) Set{{= col.Identifier }}(v {{= col.Type }}) {
    o.SetPrimaryKey(v)
}
{{if}}


}}