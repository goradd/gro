
{{g
//*** {{includeName}}
}}
{{
// insert will insert the object into the database. Related items will be saved.
func (o *{{= table.DecapIdentifier}}Base) insert(ctx context.Context) (err error) {
    d := Database()
	err = db.ExecuteTransaction(ctx, d, func() error {

{{# Here we save forward references, get the id, and then set the corresponding foreign key.}}
{{for _,col := range table.Columns}}
    {{if col.IsReference() }}
    if o.{{= col.ReferenceVariableIdentifier() }} != nil {
        if err = o.{{= col.ReferenceVariableIdentifier() }}.Save(ctx); err != nil {
            return err
        }
        id := o.{{= col.ReferenceVariableIdentifier() }}.PrimaryKey()
        o.Set{{= col.Identifier }}(id)
    }
    {{if}}
{{for}}

{{for _,col := range table.Columns}}
{{if col.HasSetter() && !col.IsNullable && col.DefaultValue == nil}}
{{# Note: Most likely the user is inserting a new record, but forgot to set a required value, but there is the
              possibility that this is a retrieved record with missing fields (through the Select statement) and those
              missing fields are required, and the user is forcing an insert. }}
    if !o.{{= col.VariableIdentifier() }}IsValid {
        panic("a value for {{= col.Identifier }} is required, and there is no default value. Call Set{{= col.Identifier }}() before inserting the record.")
    }
{{if}}
{{for}}

{{# Add auto-generated fields}}
{{for _,col := range table.Columns}}
{{if col.ReceiverType == query.ColTypeTime && (col.DefaultValue == model.CreatedTime || col.DefaultValue == model.ModifiedTime)}}
    o.{{= col.VariableIdentifier() }} = time.Now().UTC()
    o.{{= col.VariableIdentifier() }}IsValid = true
{{elseif col.SchemaSubType == schema.ColSubTypeTimestamp }}
    o.{{= col.VariableIdentifier() }} = time.Now().UnixMicro()
    o.{{= col.VariableIdentifier() }}IsValid = true
{{elseif col.SchemaSubType == schema.ColSubTypeLock }}
    o.{{= col.VariableIdentifier() }} = db.RecordVersion(0)
    o.{{= col.VariableIdentifier() }}IsValid = true
{{if}}
{{for}}

    m := o.getValidFields()

{{if table.HasAutoId() }}
	id := d.Insert(ctx, "{{= table.QueryName }}", m)
	o.{{= table.PrimaryKeyColumn().VariableIdentifier()
 }} = id
	o._originalPK = id
{{else}}
	d.Insert(ctx, "{{= table.QueryName }}", m)
	id := o.PrimaryKey()
	o._originalPK = id
{{if}}

{{g

{{: "insert_rev.tmpl"  }}
{{: "insert_mm.tmpl"  }}

}}

        return nil

    }) // transaction

    if err != nil {
        return
    }

	o.resetDirtyStatus()
	o._restored = true
	broadcast.Insert(ctx, "{{= table.DbKey }}", "{{= table.QueryName }}", o.PrimaryKey())
	return
}

}}

