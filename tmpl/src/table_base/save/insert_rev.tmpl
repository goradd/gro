
{{g
//*** {{includeName}}
}}
{{
{{# Update reverse references }}

{{for _,col := range table.ReverseReferences }}
    {{if col.IsUnique }}

    if o.{{= col.ReverseVariableIdentifier() }} != nil {
        o.{{= col.ReverseVariableIdentifier() }}.Set{{= col.Identifier }}(id)
        if err = o.{{= col.ReverseVariableIdentifier() }}.Save(ctx); err != nil {
            return err
        }
    } else if o.{{= col.ReverseVariableIdentifier() }}Pk != nil {
        d.Update(ctx, "{{= col.Table.QueryName }}", map[string]any{"{{= col.QueryName }}": id}, map[string]any{"{{= col.Table.PrimaryKeyColumn().QueryName }}": *o.{{= col.ReverseVariableIdentifier() }}Pk})
    }

    {{else}} {{# not unique }}

    if o.{{= col.ReverseVariableIdentifier() }}.Len() > 0 {
        for _,obj := range o.{{= col.ReverseVariableIdentifier() }}.All() {
            obj.Set{{= col.Identifier }}(id)
            if err = obj.Save(ctx); err != nil {
                return err
            }
            o.{{= col.ReverseVariableIdentifier() }}.Set(obj.PrimaryKey(), obj)
        }
    } else if len(o.{{= col.ReverseVariableIdentifier() }}Pks) > 0 {
        d.Update(ctx, "{{= col.Table.QueryName }}", map[string]any{"{{= col.QueryName }}": id}, map[string]any{"{{= col.Table.PrimaryKeyColumn().QueryName }}": o.{{= col.ReverseVariableIdentifier() }}Pks})
    }
    {{if}}

{{for}}

}}
