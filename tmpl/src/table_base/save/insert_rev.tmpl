
{{g
//*** {{includeName}}
}}
{{
{{# Update reverse references }}

{{for _,col := range table.ReverseReferences }}
    {{if col.IsUnique }}

    if o.{{= col.ReverseField }} != nil {
        o.{{= col.ReverseField }}.Set{{= col.Identifier }}(newPK)
        if err = o.{{= col.ReverseField }}.Save(ctx); err != nil {
            return err
        }
    }

    {{else}} {{# not unique }}

    if o.{{= col.ReverseField }}.Len() > 0 {
        keys := o.{{= col.ReverseField }}.Keys()
        for i, k := range keys {
            obj := o.{{= col.ReverseField }}.Get(k)
            obj.Set{{= col.Identifier }}(newPK)
            if err = obj.Save(ctx); err != nil {
                return err
            }
            if obj.PrimaryKey() != k {
                o.{{= col.ReverseField }}.Delete(k)
                o.{{= col.ReverseField }}.SetAt(i, obj.PrimaryKey(), obj)
            }
        }
    }
    {{if}}

{{for}}

}}
