
{{g
//*** {{includeName}}
}}
{{
// getInsertFields returns the fields that will be specified in an insert operation.
// Optional fields that have not been set and have no default will be returned as nil.
// NoSql databases should interpret this as no value. Sql databases should interpret this as
// explicitly setting a NULL value, which would override any database specific default value.
// Auto-generated fields will be returned with their generated values, except AutoPK fields, which are generated by the
// database driver and updated after the insert.
func (o *{{= table.DecapIdentifier}}Base) getInsertFields() (fields map[string]interface{}) {
	fields = map[string]interface{}{}
{{for _,col := range table.Columns}}
{{if col.IsAutoPK }}
    if o.{{= col.VariableIdentifier() }}IsDirty {
        fields["{{= col.QueryName }}"] = o.{{= col.VariableIdentifier() }}
    }
{{elseif col.ReceiverType == query.ColTypeTime && (col.DefaultValue == model.CreatedTime || col.DefaultValue == model.ModifiedTime)}}
    fields["{{= col.QueryName }}"] = time.Now().UTC()
{{elseif col.SchemaSubType == schema.ColSubTypeTimestamp }}
    fields["{{= col.QueryName }}"] = time.Now().UnixMicro()
{{elseif col.SchemaSubType == schema.ColSubTypeLock }}
    fields["{{= col.QueryName }}"] = db.RecordVersion(0)
{{elseif col.IsNullable}}
    if o.{{= col.VariableIdentifier() }}IsNull {
        fields["{{= col.QueryName }}"] = nil
    } else {
{{if col.IsEnumArray() }}
		var a []int
		for _,v := range o.{{= col.VariableIdentifier() }}.Values() {
			a = append(a, int(v))
		}
		b, _ := json.Marshal(a)
        fields["{{= col.QueryName }}"] = string(b)
{{else}}
        fields["{{= col.QueryName }}"] = o.{{= col.VariableIdentifier() }}
{{if}}
    }
{{else}} {{# IsNullable }}
{{if col.IsEnumArray() }}
    b,_ := json.Marshal(o.{{= col.VariableIdentifier() }})
    fields["{{= col.QueryName }}"] = string(b)
{{else}}
    fields["{{= col.QueryName }}"] = o.{{= col.VariableIdentifier() }}
{{if}}
{{if}}
{{for}}
	return
}

}}
