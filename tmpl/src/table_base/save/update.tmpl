
{{g
//*** {{includeName}}
}}
{{
// update will update the values in the database, saving any changed values.
func (o *{{= table.DecapIdentifier}}Base) update(ctx context.Context) (err error) {
    if !o._restored {
        panic ("cannot update a record that was not originally read from the database.")
    }

    var modifiedFields map[string]interface{}
    d := Database()
    err = db.ExecuteTransaction(ctx, d, func() error {

    // TODO: Perform all reads and consistency checks before saves
{{: "update_ref.tmpl" }}

        // Save all modified fields to the database
        modifiedFields = o.getModifiedFields()
        if len(modifiedFields) != 0 {
            d.Update(ctx, "{{= table.QueryName }}", modifiedFields, map[string]any{"{{= table.PrimaryKeyColumn().QueryName }}": o._originalPK})
        }

{{: "update_rev.tmpl" }}
{{: "update_mm.tmpl" }}

        return nil
    }) // transaction

    if err != nil {
        return
    }

	o.resetDirtyStatus()
	if len(modifiedFields) != 0 {
        broadcast.Update(ctx, "{{= table.DbKey}}", "{{= table.QueryName}}", o._originalPK, all.SortedKeys(modifiedFields)...)
	}

	return
}

}}
