// Code generated by goradd-orm. DO NOT EDIT.

package goradd

import (
	"context"
	"testing"

	"github.com/goradd/orm/pkg/test"
	"github.com/stretchr/testify/assert"
)

// createMinimalSampleEmployeeInfo creates an unsaved minimal version of a EmployeeInfo object
// for testing.
func createMinimalSampleEmployeeInfo() *EmployeeInfo {
	obj := NewEmployeeInfo()
	updateMinimalSampleEmployeeInfo(obj)

	return obj
}

// updateMinimalSampleEmployeeInfo sets the values of a minimal sample to new, random values.
func updateMinimalSampleEmployeeInfo(obj *EmployeeInfo) {

	obj.SetEmployeeNumber(test.RandomValue[int](32))

}

// createMaximalSampleEmployeeInfo creates an unsaved version of a EmployeeInfo object
// for testing that includes references to minimal objects.
func createMaximalSampleEmployeeInfo(ctx context.Context) *EmployeeInfo {
	obj := NewEmployeeInfo()
	updateMaximalSampleEmployeeInfo(ctx, obj)
	return obj
}

// updateMaximalSampleEmployeeInfo sets all the maximal sample values to new values.
// This will set new values for references, so save the old values and delete them.
func updateMaximalSampleEmployeeInfo(ctx context.Context, obj *EmployeeInfo) {
	updateMinimalSampleEmployeeInfo(obj)

}

// deleteSampleEmployeeInfo deletes an object created and saved by one of the sample creator functions.
func deleteSampleEmployeeInfo(ctx context.Context, obj *EmployeeInfo) {
	if obj == nil {
		return
	}

	_ = obj.Delete(ctx)
}

// assertEqualFieldsEmployeeInfo compares two objects and asserts that the basic fields are equal.
func assertEqualFieldsEmployeeInfo(t *testing.T, obj1, obj2 *EmployeeInfo) {
	if obj1.IdIsLoaded() && obj2.IdIsLoaded() { // only check loaded values
		assert.EqualValues(t, obj1.Id(), obj2.Id())
	}
	if obj1.PersonIdIsLoaded() && obj2.PersonIdIsLoaded() { // only check loaded values
		assert.EqualValues(t, obj1.PersonId(), obj2.PersonId())
	}
	if obj1.EmployeeNumberIsLoaded() && obj2.EmployeeNumberIsLoaded() { // only check loaded values
		assert.EqualValues(t, obj1.EmployeeNumber(), obj2.EmployeeNumber())
	}

}
