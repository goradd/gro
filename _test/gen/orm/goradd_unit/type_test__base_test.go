// Code generated by goradd-orm. DO NOT EDIT.

package goradd_unit

import (
	"testing"

	strings2 "github.com/goradd/strings"
	"github.com/stretchr/testify/assert"
)

func TestTypeTest_SetTestText(t *testing.T) {
	obj := NewTypeTest()

	testText := strings2.RandomString(strings2.AlphaAll, 10)
	obj.SetTestText(testText)
	assert.Equal(t, testText, obj.TestText())
	assert.False(t, obj.TestTextIsNull())

	obj.SetTestText(nil)
	assert.True(t, obj.TestTextIsNull())

	obj.SetTestText("")
	assert.Equal(t, "", obj.TestText(), "set empty")
	assert.False(t, obj.TestTextIsNull())

}
func TestTypeTest_SetTestVarchar(t *testing.T) {
	obj := NewTypeTest()

	testVarchar := strings2.RandomString(strings2.AlphaAll, 10)
	obj.SetTestVarchar(testVarchar)
	assert.Equal(t, testVarchar, obj.TestVarchar())
	assert.False(t, obj.TestVarcharIsNull())

	obj.SetTestVarchar(nil)
	assert.True(t, obj.TestVarcharIsNull())

	obj.SetTestVarchar("")
	assert.Equal(t, "", obj.TestVarchar(), "set empty")
	assert.False(t, obj.TestVarcharIsNull())

}
func TestTypeTest_SetTestBlob(t *testing.T) {
	obj := NewTypeTest()

	testBlob := []byte(strings2.RandomString(strings2.AlphaAll, 10))
	obj.SetTestBlob(testBlob)
	assert.Equal(t, testBlob, obj.TestBlob())

	obj.SetTestBlob(nil)
	assert.Equal(t, []byte{}, obj.TestBlob(), "set nil")

	obj.SetTestBlob([]byte{})
	assert.Equal(t, []byte{}, obj.TestBlob(), "set empty")
}
